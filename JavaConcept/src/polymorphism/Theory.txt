Polymorphism- Same name+Multiple forms(action/behaviour)

Types of Polymorphism- 

(1) Compile Time Polymorphism/Early Binding/Static Binding/Overloading

(a) Overloading--> Same method name but different signature. 
	i.e- In a single class, we have multiple methods with same name but different method signatures.

** What is a method signature?
Ans: A method signature is generally the parameters that differentiate two methods with same name.
So while calling the method, we can choose which one to call by differentiating the parameters passed.

** Can we achieve Overloading by keeping the method signature same and changing the return type?
Ans: No. It is not possible. Only change in parameters/arguments will differentiate two methods with same name 
and thus we can achieve overloading.

(b) Early Binding--> At the compile time itself we get to know about available overloaded methods. 
So it is called early binding.

(c) Static Binding--> As the binding is complete before runtime or at the compile time.
It is not going to change at runtime. So it is called as Static Binding.


(2) Runtime Polymorphism/ Late Binding/ Dynamic Binding/ Overriding

(a) Overriding--> Different classes (with inheritace applied) we have method with same signature.

** Can we change return type while performing overriding?
Ans: There are two possibilities. 

	(i)	No --> When return types are primitive(boolean, byte, char, short, int, long, float and double).

(b) Late Binding--> It binds after running the code. So it is called late binding.

(c) Dynamic Binding--> As the nature of binding is dynamic. If the method is not present in the Sub Class/ Child class,
the method will get binded from the Super Class/Parent Class. 